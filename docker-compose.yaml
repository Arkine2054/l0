version: "3.9"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password123
      - POSTGRES_DB=testdb
    ports:
      - "5555:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d testdb"]
      interval: 5s
      timeout: 3s
      retries: 5

  migrate:
    image: migrate/migrate
    container_name: migrate
    volumes:
      - ./migrations:/migrations
    depends_on:
      db:
        condition: service_healthy
    entrypoint: [
      "migrate",
      "-path", "/migrations",
      "-database", "postgres://user:password123@db:5432/testdb?sslmode=disable"
    ]

  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password123
      - DB_NAME=testdb
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_TOPIC=orders
    restart: on-failure

  filler:
    build:
      context: .
      dockerfile: ./filler/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_TOPIC=orders
    restart: "no"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:29092 --list || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
